#+TITLE: Superfly's Home-Manager's configuration
#+AUTHOR: Superfly Johnson
#+DESCRIPTION: Superfly's personal home-manager's configuration. 
#+STARTUP: showeverything
#+PROPERTY: header-args :tangle home.nix
#+NAME: home.nix
#+auto_tangle: t

* Table of Contents                                                   :TOC_2:
- [[#description][Description]]
- [[#dependencies][Dependencies]]
- [[#user-information][User Information]]
- [[#state-version][State Version]]
- [[#programs][Programs]]
  - [[#git][Git]]
- [[#services][Services]]
  - [[#syncthing][Syncthing]]
  - [[#emacs][Emacs]]
- [[#install-script][Install script]]
- [[#end][End]]

* Description                                                        
I decided to attempt using Nix's Home-Manager instead of dotfiles to manage my configuration files.
* Dependencies
#+begin_src nix
  {options, config, lib, pkgs, ... }:

  with lib;
  
  let home = "${config.home.homeDirectory}";

  in
#+end_src
* User Information
This section is reserved to my home user information's
#+begin_src nix
{
  home.username = "superfly";
  home.homeDirectory = "/home/superfly";
#+end_src
* State Version
#+begin_src nix
  home.stateVersion = "22.05"; 
#+end_src
* Programs
This section is reserved for programs that will be managed by
** Git
#+begin_src nix
  programs.git = {
    enable = true;
    userName = "Superfly Johnson";
    userEmail = "superfly.johnson@outlook.com";
};
#+end_src
* Services
** Syncthing
#+begin_src nix
  services.syncthing.enable = true;
#+end_src
** Emacs
#+begin_src nix
  services.emacs = {
  enable = true;
  client.enable = true;
  defaultEditor = true;
  socketActivation.enable = true;
  };
#+end_src
* Install script
To install the configuration, simply run in the terminal
#+BEGIN_EXAMPLE sh
sudo ./install.sh
#+END_EXAMPLE

#+BEGIN_SRC sh :tangle install.sh :shebang "#!/bin/sh" :tangle-mode (identity #o755)
  PROFILEDIR="$HOME/.profile.d"
  for i in *.nix; do
    echo "Copying $i to $HOME/.config/nixpkgs/$i"
    cp ${i} "$HOME/.config/nixpkgs/$i"
    echo "Switching Home-Manager's configuration..."
    home-manager switch
  done
  if [ ! -d ${PROFILEDIR} ]
  then
    echo "${PROFILEDIR} doesn't exist. Creating it..."
    mkdir ${PROFILEDIR}
  fi
  echo "Copying env-vars.sh to $PROFILEDIR..."
  cp "./env-vars.sh" $PROFILEDIR
  if ! grep -e "for i in \$HOME\/\.profile\.d" $HOME/.profile ; then
    echo 'Sourcing of files in $HOME/.profile.d/ is not set. Setting it...'
    echo '# Sourcing files under $HOME/.profile.d/
for i in $HOME/.profile.d/*; do
    source $i
done' >> $HOME/.profile
  fi
#+END_SRC
#+BEGIN_SRC sh :tangle env-vars.sh :shebang "#!/bin/sh"
  source "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
  export XDG_DATA_DIRS="${XDG_DATA_DIRS};$HOME/.nix-profile/share/applications/"
#+END_SRC
* End
#+begin_src nix
    programs.home-manager.enable = true;
}
#+end_src

